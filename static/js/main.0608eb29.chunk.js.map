{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","TextField","name","value","label","placeholder","onChange","useState","Math","random","toFixed","slice","id","touched","setTouched","hasError","notRequired","htmlFor","type","classNames","event","target","onBlur","NewMovie","onSubmit","newMovie","setNewMovie","count","disableButton","trim","preventDefault","current","disabled","App","moviesFromServer","setMovies","currentMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0608eb29.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  placeholder?: string,\n  onChange?: (newValue: string) => void,\n};\n\nfunction getRandomDigits() {\n  return Math.random()\n    .toFixed(16)\n    .slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  placeholder = `Enter ${label}`,\n  onChange = () => {},\n}) => {\n  // generage a unique id once on component load\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n\n  // To show errors only if the field was touched (onBlur)\n  const [touched, setTouched] = useState(false);\n  const hasError = touched && !value;\n  const notRequired = name === 'description';\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          type=\"text\"\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError && !notRequired,\n          })}\n          placeholder={placeholder}\n          value={value}\n          onChange={event => onChange(event.target.value)}\n          onBlur={() => setTouched(true)}\n        />\n      </div>\n\n      {hasError && !notRequired && (\n        <p className=\"help is-danger\">{`${label} is required`}</p>\n      )}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { TextField } from '../TextField';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  onSubmit: (movie: Movie) => void;\n};\n\nexport const NewMovie: React.FC<Props> = ({ onSubmit }) => {\n  const [newMovie, setNewMovie] = useState<Movie>({\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  });\n\n  const {\n    title,\n    description,\n    imgUrl,\n    imdbUrl,\n    imdbId,\n  } = newMovie;\n\n  const [count] = useState(0);\n\n  const disableButton = title.trim()\n    && imgUrl.trim()\n    && imdbUrl.trim()\n    && imdbId.trim();\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    onSubmit(newMovie);\n    setNewMovie({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n  };\n\n  return (\n    <form\n      className=\"NewMovie\"\n      key={count}\n      onSubmit={handleSubmit}\n    >\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={title}\n        onChange={value => {\n          setNewMovie(current => ({\n            ...current, title: value,\n          }));\n        }}\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={description}\n        onChange={value => {\n          setNewMovie(current => ({\n            ...current, description: value,\n          }));\n        }}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={imgUrl}\n        onChange={value => {\n          setNewMovie(current => ({\n            ...current, imgUrl: value,\n          }));\n        }}\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={imdbUrl}\n        onChange={value => {\n          setNewMovie(current => ({\n            ...current, imdbUrl: value,\n          }));\n        }}\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={imdbId}\n        onChange={value => {\n          setNewMovie(current => ({\n            ...current, imdbId: value,\n          }));\n        }}\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            disabled={!disableButton}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>(moviesFromServer);\n\n  const addMovie = (newMovie: Movie) => {\n    setMovies(currentMovies => [...currentMovies, newMovie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onSubmit={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}